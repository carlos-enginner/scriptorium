services:
  backend:
    image: hyperf/hyperf:8.1-alpine-v3.18-swoole
    container_name: scriptorium_backend_app
    volumes:
      - ./backend:/var/www
    working_dir: /var/www
    ports:
      - "9501:9501"
      - "9500:9500"
    depends_on:
      - db
      - cache
    command: >
      sh -c "
        php /var/www/bin/hyperf.php migrate &&
        php /var/www/bin/hyperf.php start
      "
    networks:
      - scriptorium_network

  frontend:
    container_name: scriptorium_frontend_app
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /frontend/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    command: sh -c "npm install && npm run dev"
    networks:
      - scriptorium_network

  cache:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    networks:
      - scriptorium_network

  db:
    build:
      context: .
      dockerfile: ./backend/infra/postgres/Dockerfile
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: scriptorium
      POSTGRES_USER: scripto
      POSTGRES_PASSWORD: scripto142536
      LANG: pt_BR.UTF-8
      LC_ALL: pt_BR.UTF-8
      LC_CTYPE: pt_BR.UTF-8
    ports:
      - "5432:5432"
    volumes:
      - ./data/pg:/var/lib/postgresql/data
    networks:
      - scriptorium_network

  mongog:
    image: mongo:3
    restart: on-failure
    container_name: mongog
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=graylog
      - MONGO_INITDB_REPLICA_SET_NAME=rs0
    ports:
      - 27018:27017
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongosh -u admin -p admin --quiet) -eq 1
      interval: 60s
      start_period: 60s
    networks:
      - scriptorium_network

  datanode:
    container_name: graylog_datanode
    image: "graylog/graylog-datanode:3"
    hostname: "datanode"
    environment:
      GRAYLOG_DATANODE_NODE_ID_FILE: "/var/lib/graylog-datanode/node-id"
      GRAYLOG_DATANODE_PASSWORD_SECRET: "142536142536142536"
      GRAYLOG_DATANODE_MONGODB_URI: "mongodb://admin:admin@mongog:27017/graylog"
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "8999:8999/tcp"
      - "9200:9200/tcp"
      - "9300:9300/tcp"
    networks:
      - scriptorium_network
    volumes:
      - "graylog_datanode:/var/lib/graylog-datanode"
    restart: "on-failure"

  graylog:
    container_name: graylog
    hostname: "server"
    image: "graylog/graylog:3"
    depends_on:
      - mongog
      - datanode
    entrypoint: "/usr/bin/tini --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/data/node-id"
      GRAYLOG_PASSWORD_SECRET: "142536142536142536"
      GRAYLOG_ROOT_PASSWORD_SHA2: "920c3f6b8f0e3e6b6f0fab1a53ab2daddeb5e3125e0926698c044595"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_MONGODB_URI: "mongodb://admin:admin@mongog:27017/graylog"
    ports:
      - "5044:5044/tcp" # Beats
      - "5140:5140/udp" # Syslog
      - "5140:5140/tcp" # Syslog
      - "5555:5555/tcp" # RAW TCP
      - "5555:5555/udp" # RAW UDP
      - "9000:9000/tcp" # Server API
      - "12201:12201/tcp" # GELF TCP
      - "12201:12201/udp" # GELF UDP
      - "13301:13301/tcp" # Forwarder data
      - "13302:13302/tcp" # Forwarder config
    networks:
      - scriptorium_network
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
    restart: "on-failure"

networks:
  scriptorium_network:
    driver: bridge

volumes:
  mongo_data:
  elasticsearch_data:
  postgres_data:
  redis_data:
  graylog_data:
  graylog_datanode:
